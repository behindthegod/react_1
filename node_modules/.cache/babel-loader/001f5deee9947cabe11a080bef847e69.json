{"ast":null,"code":"var _jsxFileName = \"/Users/57k/Desktop/react_uilby/src/pages/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { usePosts } from \"../hooks/usePosts/usePosts\";\nimport { useFetching } from \"../hooks/useFetching/useFetching\";\nimport { getPagesCount } from \"../utils/pages\";\nimport PostList from \"../component/PostList\";\nimport Pagination from \"../component/UI/pagination/Pagination\";\nimport PostFilter from \"../component/PostFilter\";\nimport MyModal from \"../component/UI/MyModal/MyModal\";\nimport PostForm from \"../component/PostForm\";\nimport MyButton from \"../component/UI/button/MyButton\";\nimport Loader from \"../component/UI/Loader/Loader\";\nimport PostService from \"../API/PostService\";\nimport { useObserver } from \"../hooks/useObserver/useObserver\";\nimport MySelect from \"../component/UI/select/MySelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchPosts = usePosts(posts, filter.sort, filter.query);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const lastElement = useRef();\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPagesCount(totalCount, limit));\n  });\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => setPage(page + 1));\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, [page]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  const changePage = page => {\n    setPage(page);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchPosts,\n      children: \"Get posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: limit,\n      onChange: value => setLimit(value),\n      defaultValue: \"\\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432 \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435\",\n      option: [{\n        value: 5,\n        name: '5'\n      }, {\n        value: 10,\n        name: '10'\n      }, {\n        value: 25,\n        name: '25'\n      }, {\n        value: -1,\n        name: 'Показать все'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }, this), isPostsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 74\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement,\n      style: {\n        height: 20,\n        background: 'red'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      changePage: changePage,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Posts, \"Ls8r6Xy2csiOA2emWHL/NvPJ0ks=\", false, function () {\n  return [usePosts, useFetching, useObserver];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/57k/Desktop/react_uilby/src/pages/Posts.js"],"names":["React","useEffect","useMemo","useRef","useState","usePosts","useFetching","getPagesCount","PostList","Pagination","PostFilter","MyModal","PostForm","MyButton","Loader","PostService","useObserver","MySelect","Posts","posts","setPosts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchPosts","totalPages","setTotalPages","limit","setLimit","page","setPage","lastElement","fetchPosts","isPostsLoading","postError","response","getAll","data","totalCount","headers","createPost","newPost","changePage","removePost","post","p","id","margin","value","name","display","justifyContent","height","background"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo, useRef, useState} from \"react\";\nimport {usePosts} from \"../hooks/usePosts/usePosts\";\nimport {useFetching} from \"../hooks/useFetching/useFetching\";\nimport {getPagesCount} from \"../utils/pages\";\nimport PostList from \"../component/PostList\";\nimport Pagination from \"../component/UI/pagination/Pagination\";\nimport PostFilter from \"../component/PostFilter\";\nimport MyModal from \"../component/UI/MyModal/MyModal\";\nimport PostForm from \"../component/PostForm\";\nimport MyButton from \"../component/UI/button/MyButton\";\nimport Loader from \"../component/UI/Loader/Loader\";\nimport PostService from \"../API/PostService\";\nimport {useObserver} from \"../hooks/useObserver/useObserver\";\nimport MySelect from \"../component/UI/select/MySelect\";\n\n\nconst Posts = () => {\n        const [posts, setPosts] = useState([]);\n        const [filter, setFilter] = useState({sort: '', query: ''});\n        const [modal, setModal] = useState(false);\n        const sortedAndSearchPosts = usePosts(posts, filter.sort, filter.query);\n        const [totalPages, setTotalPages] = useState(0);\n        const [limit, setLimit] = useState(10);\n        const [page, setPage] = useState(1);\n        const lastElement = useRef()\n\n\n\n        const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n                const response = await PostService.getAll(limit, page);\n                setPosts([...posts, ...response.data]);\n                const totalCount = response.headers['x-total-count'];\n                setTotalPages(getPagesCount(totalCount, limit));\n        })\n\n        useObserver(lastElement, page < totalPages, isPostsLoading, () => setPage(page + 1))\n\n\n\n        useEffect(() => {\n                fetchPosts(limit, page);\n        }, [page])\n    \n        const createPost = (newPost) => {\n                setPosts([...posts, newPost]);\n                setModal(false);\n        }\n\n        const changePage = (page) => {\n                setPage(page);\n        }\n\n        const removePost = (post) => {\n                setPosts(posts.filter(p => p.id !== post.id));\n        }\n\n        return (\n            <div className=\"App\">\n                    <button onClick={fetchPosts}>Get posts</button>\n                    <MyButton onClick={() => setModal(true)}>\n                            Создать пользователя\n                    </MyButton>\n                    <MyModal visible={modal} setVisible={setModal}>\n                            <PostForm create={createPost}/>\n                    </MyModal>\n                    <hr style={{margin: \"15px 0\"}}/>\n                    <PostFilter\n                        filter={filter}\n                        setFilter={setFilter}\n                    />\n                    <MySelect\n                        value={limit}\n                        onChange={value => setLimit(value)}\n                        defaultValue='количество элементов на странице'\n                        option={[\n                            {value: 5, name: '5'},\n                            {value: 10, name: '10'},\n                            {value: 25, name: '25'},\n                            {value: -1, name: 'Показать все'}\n                        ]}\n                    />\n                    {postError &&\n                    <h1>Произошла ошибка ${postError}</h1>\n                    }\n                {isPostsLoading &&\n                <div style={{display: 'flex', justifyContent: 'center'}}><Loader/></div>\n                }\n                <PostList remove={removePost} posts={sortedAndSearchPosts} title=\"Список постов 1\"/>\n                <div ref={lastElement} style={{height: 20, background: 'red'}}></div>\n                <Pagination page={page} changePage={changePage} totalPages={totalPages}/>\n            </div>\n        );\n}\n\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}