{"ast":null,"code":"var _jsxFileName = \"/Users/57k/Desktop/react_uilby/src/pages/PostIdPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetching } from \"../hooks/useFetching/useFetching\";\nimport PostService from \"../API/PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const [post, setPost] = useState(null);\n  const [fetchPostById, isLoading, error] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0412\\u044B \\u043E\\u0442\\u043A\\u0440\\u044B\\u043B\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u043F\\u043E\\u0441\\u0442\\u0430 c Id = \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostIdPage, \"YY7e0nMW8z+3qDO6UIfV3npYIHs=\", false, function () {\n  return [useParams, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"sources":["/Users/57k/Desktop/react_uilby/src/pages/PostIdPage.js"],"names":["React","useEffect","useState","useParams","useFetching","PostService","PostIdPage","params","post","setPost","fetchPostById","isLoading","error","id","response","getById","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,WAAR,QAA0B,kCAA1B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,aAAD,EAAgBC,SAAhB,EAA2BC,KAA3B,IAAoCR,WAAW,CAAC,MAAOS,EAAP,IAAY;AAC9D,UAAMC,QAAQ,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoBF,EAApB,CAAvB;AACAJ,IAAAA,OAAO,CAACK,QAAQ,CAACE,IAAV,CAAP;AACH,GAHoD,CAArD;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,aAAa,CAACH,MAAM,CAACM,EAAR,CAAb;AACH,GAFQ,CAAT;AAIA,sBACI;AAAA,4BACI;AAAA,oKAAsCN,MAAM,CAACM,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlBD;;GAAMP,U;UACaH,S,EAE2BC,W;;;KAHxCE,U;AAoBN,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {useFetching} from \"../hooks/useFetching/useFetching\";\nimport PostService from \"../API/PostService\";\n\nconst PostIdPage = () => {\n    const params = useParams();\n    const [post, setPost] = useState(null);\n    const [fetchPostById, isLoading, error] = useFetching(async (id)=>{\n        const response = await PostService.getById(id);\n        setPost(response.data);\n    });\n\n    useEffect(() => {\n        fetchPostById(params.id)\n    })\n\n    return (\n        <div>\n            <h1>Вы открыли страницу поста c Id = {params.id}</h1>\n            <div></div>\n        </div>\n    );\n};\n\nexport default PostIdPage;"]},"metadata":{},"sourceType":"module"}