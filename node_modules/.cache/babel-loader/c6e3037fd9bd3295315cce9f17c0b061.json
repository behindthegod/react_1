{"ast":null,"code":"var _jsxFileName = \"/Users/57k/Desktop/react_uilby/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useRef, useState } from \"react\";\nimport \"./styles/App.css\";\nimport PostList from \"./component/PostList\";\nimport PostForm from \"./component/PostForm\";\nimport MySelect from \"./component/UI/select/MySelect\";\nimport MyInput from \"./component/UI/input/MyInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: \"AAA\",\n    body: \"IIII\"\n  }, {\n    id: 2,\n    title: \"BBB\",\n    body: \"KKKKK\"\n  }, {\n    id: 3,\n    title: \"CCC\",\n    body: \"BBBBB\"\n  }]);\n  const [selectedSort, setSelectedSort] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const sortedPosts = useMemo(() => {\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    }\n\n    return posts;\n  }, [selectedSort, posts]);\n  const sortedAndSearchPosts = useMemo(() => {\n    return sortedPosts.filter(posts);\n  }, [searchQuery, sortedPosts]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const sortPosts = sort => {\n    setSelectedSort(sort);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MyInput, {\n        placehorder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedSort,\n        onChange: sortPosts,\n        defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043F\\u043E:\",\n        option: [{\n          value: 'title',\n          name: 'По названию'\n        }, {\n          value: 'body',\n          name: 'По описанию'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u043E\\u0432 \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"TH1sI3doCQde6Y744YxXERlEYMc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/57k/Desktop/react_uilby/src/App.js"],"names":["React","useMemo","useRef","useState","PostList","PostForm","MySelect","MyInput","App","posts","setPosts","id","title","body","selectedSort","setSelectedSort","searchQuery","setSearchQuery","sortedPosts","sort","a","b","localeCompare","sortedAndSearchPosts","filter","createPost","newPost","removePost","post","p","sortPosts","margin","e","target","value","name","length"],"mappings":"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","sourcesContent":["import React, {useMemo, useRef, useState} from \"react\";\nimport \"./styles/App.css\";\nimport PostList from \"./component/PostList\";\nimport PostForm from \"./component/PostForm\";\nimport MySelect from \"./component/UI/select/MySelect\";\nimport MyInput from \"./component/UI/input/MyInput\";\n\nconst App = () => {\n    const [posts, setPosts] = useState([\n        {id: 1, title: \"AAA\", body: \"IIII\"},\n        {id: 2, title: \"BBB\", body: \"KKKKK\"},\n        {id: 3, title: \"CCC\", body: \"BBBBB\"}\n    ])\n    const [selectedSort, setSelectedSort] = useState('');\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const sortedPosts = useMemo(() => {\n        if (selectedSort) {\n            return [...posts].sort( (a, b) =>a[selectedSort].localeCompare(b[selectedSort]));\n        }\n        return posts;\n    },[selectedSort, posts]);\n\n    const sortedAndSearchPosts = useMemo(() => {\n        return sortedPosts.filter(posts)\n    }, [searchQuery, sortedPosts])\n\n\n    const createPost = (newPost) => {\n        setPosts([...posts, newPost]);\n    }\n\n    const removePost = (post) => {\n        setPosts(posts.filter(p => p.id !== post.id));\n    }\n\n    const sortPosts = (sort) => {\n        setSelectedSort(sort);\n    }\n\n    return (\n        <div className=\"App\">\n            <PostForm create={createPost}/>\n            <hr style={{margin: \"15px 0\"}}/>\n            <div>\n                <MyInput\n                    placehorder='Поиск...'\n                    value={searchQuery}\n                    onChange={e=> setSearchQuery(e.target.value)}\n                />\n            </div>\n            <div>\n                <MySelect\n                    value={selectedSort}\n                    onChange={sortPosts}\n                    defaultValue='Сортировка по:'\n                    option={[\n                        {value: 'title', name: 'По названию'},\n                        {value: 'body', name: 'По описанию'},\n                    ]}\n                />\n            </div>\n            {posts.length !== 0\n                ? <PostList remove={removePost} posts={sortedAndSearchPosts} title=\"Список постов 1\"/>\n                : <h2>Постов нет</h2>\n            }\n\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}