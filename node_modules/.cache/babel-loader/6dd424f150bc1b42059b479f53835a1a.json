{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nexport const useSortedPosts = ({\n  posts,\n  sort\n}) => {\n  _s();\n\n  const sortedPosts = useMemo(() => {\n    if (sort) {\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\n    }\n\n    return posts;\n  }, [sort, posts]);\n  return sortedPosts;\n};\n\n_s(useSortedPosts, \"JCOM6shKwCo6CttVuNVxaNMnTKM=\");\n\nexport const usePosts = (posts, sort, query) => {\n  _s2();\n\n  const sortedPosts = useSortedPosts;\n  const sortedAndSearchPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(query));\n  }, [query, sortedPosts]);\n  return sortedAndSearchPosts;\n};\n\n_s2(usePosts, \"UFazUKpfaDyf2pQOV95NsDWgGqk=\");","map":{"version":3,"sources":["/Users/57k/Desktop/react_uilby/src/hooks/usePosts/usePosts.js"],"names":["React","useMemo","useSortedPosts","posts","sort","sortedPosts","a","b","localeCompare","usePosts","query","sortedAndSearchPosts","filter","post","title","toLowerCase","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAmB;AAAA;;AAC7C,QAAMC,WAAW,GAAGJ,OAAO,CAAC,MAAM;AAC9B,QAAIG,IAAJ,EAAU;AACN,aAAO,CAAC,GAAGD,KAAJ,EAAWC,IAAX,CAAgB,CAACE,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACF,IAAD,CAAD,CAAQI,aAAR,CAAsBD,CAAC,CAACH,IAAD,CAAvB,CAA1B,CAAP;AACH;;AACD,WAAOD,KAAP;AACH,GAL0B,EAKxB,CAACC,IAAD,EAAOD,KAAP,CALwB,CAA3B;AAMA,SAAOE,WAAP;AACH,CARM;;GAAMH,c;;AAUb,OAAO,MAAMO,QAAQ,GAAG,CAACN,KAAD,EAAQC,IAAR,EAAcM,KAAd,KAAwB;AAAA;;AAC5C,QAAML,WAAW,GAAGH,cAApB;AACA,QAAMS,oBAAoB,GAAGV,OAAO,CAAC,MAAM;AACvC,WAAOI,WAAW,CAACO,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCN,KAAlC,CAA3B,CAAP;AACH,GAFmC,EAEjC,CAACA,KAAD,EAAQL,WAAR,CAFiC,CAApC;AAGA,SAAOM,oBAAP;AACH,CANM;;IAAMF,Q","sourcesContent":["import React, {useMemo} from 'react';\n\nexport const useSortedPosts = ({posts, sort}) => {\n    const sortedPosts = useMemo(() => {\n        if (sort) {\n            return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\n        }\n        return posts;\n    }, [sort, posts]);\n    return sortedPosts;\n};\n\nexport const usePosts = (posts, sort, query) => {\n    const sortedPosts = useSortedPosts;\n    const sortedAndSearchPosts = useMemo(() => {\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(query));\n    }, [query, sortedPosts]);\n    return sortedAndSearchPosts;\n}"]},"metadata":{},"sourceType":"module"}