{"ast":null,"code":"var _jsxFileName = \"/Users/57k/Desktop/react_uilby/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./styles/App.css\";\nimport PostList from \"./component/PostList\";\nimport PostForm from \"./component/PostForm\";\nimport PostFilter from \"./component/PostFilter\";\nimport MyModal from \"./component/UI/MyModal/MyModal\";\nimport MyButton from \"./component/UI/button/MyButton\";\nimport { usePosts } from \"./hooks/usePosts/usePosts\";\nimport PostService from \"./API/PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchPosts = usePosts(posts, filter.sort, filter.query);\n  const [isPostsLoading, setPostsLoading] = useState('false');\n  useEffect(() => {\n    isPostsLoading(true);\n    fetchPosts();\n    isPostsLoading(false);\n  }, [filter]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  async function fetchPosts() {\n    const posts = await PostService.getAll();\n    setPosts(posts);\n  }\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchPosts,\n      children: \"Get posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"LIksINPROobfUwWQpT7RBbjZZvY=\", false, function () {\n  return [usePosts];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/57k/Desktop/react_uilby/src/App.js"],"names":["React","useEffect","useMemo","useRef","useState","PostList","PostForm","PostFilter","MyModal","MyButton","usePosts","PostService","App","posts","setPosts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchPosts","isPostsLoading","setPostsLoading","fetchPosts","createPost","newPost","getAll","removePost","post","p","id","margin"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo, useRef, useState} from \"react\";\nimport \"./styles/App.css\";\nimport PostList from \"./component/PostList\";\nimport PostForm from \"./component/PostForm\";\nimport PostFilter from \"./component/PostFilter\";\nimport MyModal from \"./component/UI/MyModal/MyModal\";\nimport MyButton from \"./component/UI/button/MyButton\";\nimport {usePosts} from \"./hooks/usePosts/usePosts\";\nimport PostService from \"./API/PostService\";\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [filter, setFilter] = useState({sort: '', query: ''});\n    const [modal, setModal] = useState(false);\n    const sortedAndSearchPosts = usePosts(posts, filter.sort, filter.query);\n    const [isPostsLoading, setPostsLoading] = useState('false');\n\n    useEffect(() => {\n        isPostsLoading(true);\n        fetchPosts();\n        isPostsLoading(false);\n    }, [filter])\n\n\n    const createPost = (newPost) => {\n        setPosts([...posts, newPost]);\n        setModal(false);\n    }\n\n    async function fetchPosts () {\n        const posts = await PostService.getAll();\n        setPosts(posts);\n    }\n\n    const removePost = (post) => {\n        setPosts(posts.filter(p => p.id !== post.id));\n    }\n\n    return (\n        <div className=\"App\">\n            <button onClick={fetchPosts}>Get posts</button>\n            <MyButton onClick={()=>setModal(true)}>\n                Создать пользователя\n            </MyButton>\n            <MyModal visible={modal} setVisible={setModal}>\n                <PostForm create={createPost}/>\n            </MyModal>\n            <hr style={{margin: \"15px 0\"}}/>\n            <PostFilter\n                filter={filter}\n                setFilter={setFilter}\n            />\n            <PostList remove={removePost} posts={sortedAndSearchPosts} title=\"Список постов 1\"/>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}