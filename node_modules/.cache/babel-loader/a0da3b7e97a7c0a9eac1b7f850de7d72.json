{"ast":null,"code":"var _jsxFileName = \"/Users/57k/Desktop/react_uilby/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport \"./styles/App.css\";\nimport PostList from \"./component/PostList\";\nimport PostForm from \"./component/PostForm\";\nimport PostFilter from \"./component/PostFilter\";\nimport MyModal from \"./component/UI/MyModal/MyModal\";\nimport MyButton from \"./component/UI/button/MyButton\";\nimport { usePosts } from \"./hooks/usePosts/usePosts\";\nimport PostService from \"./API/PostService\";\nimport Loader from \"./component/UI/Loader/Loader\";\nimport { useFetching } from \"./hooks/useFetching/useFetching\";\nimport { getPagesArray, getPagesCount } from \"./utils/pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchPosts = usePosts(posts, filter.sort, filter.query);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  let pagesArray = getPagesArray(totalPages);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts(response.data);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPagesCount(totalCount, limit));\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  const changePage = page => {\n    setPage(page);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchPosts,\n      children: \"Get posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchPosts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__wrapper\",\n      children: pagesArray.map(p => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setPage(p),\n        className: page === p ? 'page page__current' : 'page',\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"/6yJ9jmxNOp7kzxyJoxmZGXz1hI=\", false, function () {\n  return [usePosts, useFetching];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/57k/Desktop/react_uilby/src/App.js"],"names":["React","useEffect","useMemo","useRef","useState","PostList","PostForm","PostFilter","MyModal","MyButton","usePosts","PostService","Loader","useFetching","getPagesArray","getPagesCount","App","posts","setPosts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchPosts","totalPages","setTotalPages","limit","setLimit","page","setPage","pagesArray","fetchPosts","isPostsLoading","postError","response","getAll","data","totalCount","headers","createPost","newPost","changePage","removePost","post","p","id","margin","display","justifyContent","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo, useRef, useState} from \"react\";\nimport \"./styles/App.css\";\nimport PostList from \"./component/PostList\";\nimport PostForm from \"./component/PostForm\";\nimport PostFilter from \"./component/PostFilter\";\nimport MyModal from \"./component/UI/MyModal/MyModal\";\nimport MyButton from \"./component/UI/button/MyButton\";\nimport {usePosts} from \"./hooks/usePosts/usePosts\";\nimport PostService from \"./API/PostService\";\nimport Loader from \"./component/UI/Loader/Loader\";\nimport {useFetching} from \"./hooks/useFetching/useFetching\";\nimport {getPagesArray, getPagesCount} from \"./utils/pages\";\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [filter, setFilter] = useState({sort: '', query: ''});\n    const [modal, setModal] = useState(false);\n    const sortedAndSearchPosts = usePosts(posts, filter.sort, filter.query);\n    const [totalPages, setTotalPages] = useState(0);\n    const [limit, setLimit] = useState(10);\n    const [page, setPage] = useState(1);\n    let pagesArray = getPagesArray(totalPages);\n\n\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n        const response = await PostService.getAll(limit, page);\n        setPosts(response.data);\n        const totalCount = response.headers['x-total-count'];\n        setTotalPages(getPagesCount(totalCount, limit));\n    })\n\n    useEffect(() => {\n        fetchPosts();\n    }, [])\n\n\n    const createPost = (newPost) => {\n        setPosts([...posts, newPost]);\n        setModal(false);\n    }\n\n    const changePage = (page) => {\n        setPage(page);\n    }\n\n\n    const removePost = (post) => {\n        setPosts(posts.filter(p => p.id !== post.id));\n    }\n\n    return (\n        <div className=\"App\">\n            <button onClick={fetchPosts}>Get posts</button>\n            <MyButton onClick={() => setModal(true)}>\n                Создать пользователя\n            </MyButton>\n            <MyModal visible={modal} setVisible={setModal}>\n                <PostForm create={createPost}/>\n            </MyModal>\n            <hr style={{margin: \"15px 0\"}}/>\n            <PostFilter\n                filter={filter}\n                setFilter={setFilter}\n            />\n            {postError &&\n            <h1>Произошла ошибка ${postError}</h1>\n            }\n            {isPostsLoading\n                ? <div style={{display: 'flex', justifyContent: 'center'}}><Loader/></div>\n                : <PostList remove={removePost} posts={sortedAndSearchPosts} title=\"Список постов 1\"/>\n            }\n            <PostList remove={removePost} posts={sortedAndSearchPosts} title=\"Список постов 1\"/>\n            <div className=\"page__wrapper\">\n                {pagesArray.map(p =>\n                    <span\n                        onClick={() => setPage(p)}\n                        key={p} className={page === p ? 'page page__current' : 'page'}>{p}</span>\n                )}\n            </div>\n        </div>\n    );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}